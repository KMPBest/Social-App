[versions]

javaDotenv = "5.2.2"
kamelImage = "1.0.7"
kotlin = "2.2.0"
compose = "1.8.2"
agp = "8.12.0"
androidx-activityCompose = "1.10.1"
androidx-uiTest = "1.8.3"
materialIconsExtended = "1.7.3"
openaiClient = "4.0.1"
voyager = "1.1.0-beta03"
napier = "2.7.1"
buildConfig = "5.6.7"
kotlinx-coroutines = "1.10.2"
ktor = "3.2.3"
kotlinx-datetime = "0.7.1"
koin = "4.1.0"
dataStore = "1.1.7"
atomicfu = "0.29.0"

[libraries]

androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-uiTest" }
androidx-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-uiTest" }
java-dotenv = { module = "io.github.cdimascio:java-dotenv", version.ref = "javaDotenv" }
kamel-image = { module = "media.kamel:kamel-image-default", version.ref = "kamelImage" }
material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }

#Ktor
ktor-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }

#Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }

#Voyager
openai-client = { module = "com.aallam.openai:openai-client", version.ref = "openaiClient" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-tab-navigator = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
voyager-screenModel = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }

# Kotlin Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

# DataStore
dataStore = { module = "androidx.datastore:datastore", version.ref = "dataStore" }
dataStore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }
dataStore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "dataStore" }

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
